<data:sql-datasource xmlns:data="http://jfreereport.sourceforge.net/namespaces/datasources/sql">
  <data:config/>
  <data:connection>
    <data:driver>org.postgresql.Driver</data:driver>
    <data:url>jdbc:postgresql://192.168.2.106:5432/SingerDB</data:url>
    <data:properties>
      <data:property name="user">postgres</data:property>
      <data:property name="password">encrypted:771b4a60055957</data:property>
      <data:property name="::pentaho-reporting::port">5432</data:property>
      <data:property name="::pentaho-reporting::name">ReportCon</data:property>
      <data:property name="::pentaho-reporting::database-name">SingerDB</data:property>
      <data:property name="::pentaho-reporting::hostname">192.168.2.106</data:property>
      <data:property name="::pentaho-reporting::database-type">POSTGRESQL</data:property>
    </data:properties>
  </data:connection>
  <data:query-definitions>
    <data:query name="Query 1">
      <data:static-query>select date,ivrcalls,answeredcalls,queuedcalls,att,abandonedcalls,abandonedpercent,ldelaybaban,dropedcalls,dropedcallspercent,aivrt,asa,avgdelaybeforeans,avgdelaybeforeaban,
aholdt,avgacw,ldelaybans,handledcpercentage,avghandletime,ttt,sl,company,tenant,ivrfullsum,answeredfullsum,queuedfullsum,abandonedfullsum,droppedfullsum,tttfullsum,abandonedpercentfull,
droppedpercentfull,aivrtfull,aacwtfull,attfull,fullhandledcpercentage,fullaht,fullasa,
fullaholdtime,fullsl,idletime, (sum(idletime::interval) OVER() )::text as fullidle
  from 

(SELECT
     &quot;public&quot;.&quot;cdr_dailysummary&quot;.&quot;id&quot;,
     &quot;public&quot;.&quot;cdr_dailysummary&quot;.&quot;date&quot;::date,
     &quot;public&quot;.&quot;cdr_dailysummary&quot;.&quot;ivrcalls&quot;,
     &quot;public&quot;.&quot;cdr_dailysummary&quot;.&quot;answeredcalls&quot;,
     TO_CHAR(&quot;public&quot;.&quot;cdr_dailysummary&quot;.&quot;att&quot;::text::interval,'HH24:MI:SS') as att,
     &quot;public&quot;.&quot;cdr_dailysummary&quot;.&quot;abandonedcalls&quot;,
     (ROUND((&quot;public&quot;.&quot;cdr_dailysummary&quot;.&quot;abandonedcalls&quot;::numeric/&quot;public&quot;.&quot;cdr_dailysummary&quot;.&quot;ivrcalls&quot;::numeric)*100,2))::text as abandonedpercent,
     &quot;public&quot;.&quot;cdr_dailysummary&quot;.&quot;ldelaybaban&quot;,
     &quot;public&quot;.&quot;cdr_dailysummary&quot;.&quot;dropedcalls&quot;,
     (ROUND((&quot;public&quot;.&quot;cdr_dailysummary&quot;.&quot;dropedcalls&quot;::numeric/(case when (&quot;public&quot;.&quot;cdr_dailysummary&quot;.&quot;queuedcalls&quot;::numeric) = 0 then 1 else (&quot;public&quot;.&quot;cdr_dailysummary&quot;.&quot;queuedcalls&quot;::numeric) end) )*100,2))::text as dropedcallspercent,
     TO_CHAR(&quot;public&quot;.&quot;cdr_dailysummary&quot;.&quot;aivrt&quot;::text::interval, 'HH24:MI:SS') as aivrt,
     TO_CHAR((ROUND((&quot;public&quot;.&quot;cdr_dailysummary&quot;.&quot;asanumerator&quot;::numeric/(case when (&quot;public&quot;.&quot;cdr_dailysummary&quot;.&quot;answeredcalls&quot;::numeric) = 0 then 1 else (&quot;public&quot;.&quot;cdr_dailysummary&quot;.&quot;answeredcalls&quot;::numeric) end)),2))::text::interval, 'HH24:MI:SS') as asa,
     &quot;public&quot;.&quot;cdr_dailysummary&quot;.&quot;avgdelaybeforeans&quot;,
     &quot;public&quot;.&quot;cdr_dailysummary&quot;.&quot;avgdelaybeforeaban&quot;,
     TO_CHAR((ROUND((&quot;public&quot;.&quot;cdr_dailysummary&quot;.&quot;totholdt&quot;::numeric/ (SELECT CASE WHEN &quot;public&quot;.&quot;cdr_dailysummary&quot;.&quot;tholdcount&quot;::numeric =0 THEN 1 ELSE &quot;public&quot;.&quot;cdr_dailysummary&quot;.&quot;tholdcount&quot;::numeric END )),2))::text::interval, 'HH24:MI:SS') as aholdt,
     TO_CHAR(&quot;public&quot;.&quot;cdr_dailysummary&quot;.&quot;avgacw&quot;::text::interval, 'HH24:MI:SS') as avgacw,
     &quot;public&quot;.&quot;cdr_dailysummary&quot;.&quot;queuedcalls&quot;,
     &quot;public&quot;.&quot;cdr_dailysummary&quot;.&quot;ldelaybans&quot;,
     (ROUND((&quot;public&quot;.&quot;cdr_dailysummary&quot;.&quot;answeredcalls&quot;::numeric/(case when (&quot;public&quot;.&quot;cdr_dailysummary&quot;.&quot;queuedcalls&quot;::numeric) = 0 then 1 else (&quot;public&quot;.&quot;cdr_dailysummary&quot;.&quot;queuedcalls&quot;::numeric) end)*100),2))::text as handledcpercentage,
     TO_CHAR((ROUND(( (&quot;public&quot;.&quot;cdr_dailysummary&quot;.&quot;ttt&quot;::numeric+&quot;public&quot;.&quot;cdr_dailysummary&quot;.&quot;tacwt&quot;::numeric)/(case when(&quot;public&quot;.&quot;cdr_dailysummary&quot;.&quot;answeredcalls&quot;::numeric) = 0 then 1 else (&quot;public&quot;.&quot;cdr_dailysummary&quot;.&quot;answeredcalls&quot;::numeric) end)),2))::text::interval, 'HH24:MI:SS') as avghandletime,
     TO_CHAR(&quot;public&quot;.&quot;cdr_dailysummary&quot;.&quot;ttt&quot;::text::interval, 'HH24:MI:SS') as ttt,
     (ROUND((&quot;public&quot;.&quot;cdr_dailysummary&quot;.&quot;slnumerator&quot;::numeric/(case when(&quot;public&quot;.&quot;cdr_dailysummary&quot;.&quot;queuedcalls&quot;::numeric) = 0 then 1 else (&quot;public&quot;.&quot;cdr_dailysummary&quot;.&quot;queuedcalls&quot;::numeric) end)),2))::text as sl,
     &quot;public&quot;.&quot;cdr_dailysummary&quot;.&quot;company&quot;,
     &quot;public&quot;.&quot;cdr_dailysummary&quot;.&quot;tenant&quot;,

     (sum(&quot;public&quot;.&quot;cdr_dailysummary&quot;.&quot;ivrcalls&quot;::integer) OVER ())::text  as ivrfullsum ,
     (sum(&quot;public&quot;.&quot;cdr_dailysummary&quot;.&quot;answeredcalls&quot;::integer) OVER ())::text  as  answeredfullsum,
     (sum(&quot;public&quot;.&quot;cdr_dailysummary&quot;.&quot;queuedcalls&quot;::integer) OVER ())::text  as  queuedfullsum,
     (sum(&quot;public&quot;.&quot;cdr_dailysummary&quot;.&quot;abandonedcalls&quot;::integer) OVER ())::text  as  abandonedfullsum,
     (sum(&quot;public&quot;.&quot;cdr_dailysummary&quot;.&quot;dropedcalls&quot;::integer) OVER ())::text  as  droppedfullsum,
     TO_CHAR((sum(&quot;public&quot;.&quot;cdr_dailysummary&quot;.&quot;ttt&quot;::interval) OVER ())::text::interval, 'HH24:MI:SS' )  as  tttfullsum,
     ROUND((avg(&quot;public&quot;.&quot;cdr_dailysummary&quot;.&quot;abandonedcalls&quot;::numeric*100/(case when(&quot;public&quot;.&quot;cdr_dailysummary&quot;.&quot;ivrcalls&quot;::numeric) = 0  then 1 else (&quot;public&quot;.&quot;cdr_dailysummary&quot;.&quot;ivrcalls&quot;::numeric) end)) OVER ()),2)::text as abandonedpercentfull,
     ROUND((avg(&quot;public&quot;.&quot;cdr_dailysummary&quot;.&quot;dropedcalls&quot;::numeric*100/(case when (&quot;public&quot;.&quot;cdr_dailysummary&quot;.&quot;ivrcalls&quot;::numeric) = 0 then 1 else (&quot;public&quot;.&quot;cdr_dailysummary&quot;.&quot;ivrcalls&quot;::numeric) end)) OVER ()),2)::text as droppedpercentfull,
     TO_CHAR((avg(&quot;public&quot;.&quot;cdr_dailysummary&quot;.&quot;ivrcalls&quot;::numeric) OVER ())::text::interval, 'HH24:MI:SS' ) as aivrtfull,
     TO_CHAR((avg(&quot;public&quot;.&quot;cdr_dailysummary&quot;.&quot;avgacw&quot;::numeric) OVER ())::text::interval, 'HH24:MI:SS' )  as aacwtfull,
     TO_CHAR((avg(&quot;public&quot;.&quot;cdr_dailysummary&quot;.&quot;ttt&quot;::numeric) OVER ())::text::interval , 'HH24:MI:SS' )as  attfull,
     ROUND((avg(&quot;public&quot;.&quot;cdr_dailysummary&quot;.&quot;answeredcalls&quot;::numeric*100/(case when (&quot;public&quot;.&quot;cdr_dailysummary&quot;.&quot;queuedcalls&quot;::numeric) = 0 then 1 else (&quot;public&quot;.&quot;cdr_dailysummary&quot;.&quot;queuedcalls&quot;::numeric) end)) OVER () ),2)::text as fullhandledcpercentage,
     TO_CHAR((avg((&quot;public&quot;.&quot;cdr_dailysummary&quot;.&quot;ttt&quot;::numeric+&quot;public&quot;.&quot;cdr_dailysummary&quot;.&quot;tacwt&quot;::numeric)/(case when(&quot;public&quot;.&quot;cdr_dailysummary&quot;.&quot;answeredcalls&quot;::numeric) = 0 then 1 else (&quot;public&quot;.&quot;cdr_dailysummary&quot;.&quot;answeredcalls&quot;::numeric) end)) OVER ())::text::interval, 'HH24:MI:SS' ) as fullaht,
     TO_CHAR((avg((&quot;public&quot;.&quot;cdr_dailysummary&quot;.&quot;asanumerator&quot;::numeric)/(case when (&quot;public&quot;.&quot;cdr_dailysummary&quot;.&quot;answeredcalls&quot;::numeric) = 0 then 1 else (&quot;public&quot;.&quot;cdr_dailysummary&quot;.&quot;answeredcalls&quot;::numeric) end)) OVER ())::text::interval, 'HH24:MI:SS' ) as fullasa,
     TO_CHAR((avg(&quot;public&quot;.&quot;cdr_dailysummary&quot;.&quot;totholdt&quot;::numeric/ (SELECT CASE WHEN &quot;public&quot;.&quot;cdr_dailysummary&quot;.&quot;tholdcount&quot;::numeric =0 THEN 1 ELSE &quot;public&quot;.&quot;cdr_dailysummary&quot;.&quot;tholdcount&quot;::numeric END )) OVER ())::text::interval, 'HH24:MI:SS' ) as fullaholdtime,
    ROUND((avg(&quot;public&quot;.&quot;cdr_dailysummary&quot;.&quot;slnumerator&quot;::numeric/(case when (&quot;public&quot;.&quot;cdr_dailysummary&quot;.&quot;queuedcalls&quot;::numeric) = 0 then 1 else (&quot;public&quot;.&quot;cdr_dailysummary&quot;.&quot;queuedcalls&quot;::numeric) end)) OVER () ),2)::text as fullsl
FROM
     &quot;public&quot;.&quot;cdr_dailysummary&quot;

    Where
	&quot;public&quot;.&quot;cdr_dailysummary&quot;.&quot;date&quot;::date &gt;=   ${FromDate} 
	AND &quot;public&quot;.&quot;cdr_dailysummary&quot;.&quot;date&quot;::date &lt;=   ${ToDate}
     Order by date)a
     Left outer join 
     (select TO_CHAR(sum(duration::interval), 'HH24:MI:SS') as idletime,  starttime::date from call_resourcelogindetail
     where
     mode ='Inbound'
     and value = 'Idle' 
  and starttime::date &gt;= ${FromDate} 
  and starttime::date &lt;= ${ToDate}
     group by starttime::date)b
	ON a.date = b.starttime

order by a.date desc
     </data:static-query>
    </data:query>
  </data:query-definitions>
</data:sql-datasource>
