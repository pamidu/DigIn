<data:sql-datasource xmlns:data="http://jfreereport.sourceforge.net/namespaces/datasources/sql">
  <data:config/>
  <data:connection>
    <data:driver>org.postgresql.Driver</data:driver>
    <data:url>jdbc:postgresql://192.168.2.106:5432/SingerDB</data:url>
    <data:properties>
      <data:property name="user">postgres</data:property>
      <data:property name="password">encrypted:771b4a60055957</data:property>
      <data:property name="::pentaho-reporting::port">5432</data:property>
      <data:property name="::pentaho-reporting::name">ReportCon</data:property>
      <data:property name="::pentaho-reporting::database-name">SingerDB</data:property>
      <data:property name="::pentaho-reporting::hostname">192.168.2.106</data:property>
      <data:property name="::pentaho-reporting::database-type">POSTGRESQL</data:property>
    </data:properties>
  </data:connection>
  <data:query-definitions>
    <data:query name="Ecat">
      <data:static-query>SELECT 1 AS sort,'All' AS Ecat
UNION 
SELECT DISTINCT 2 AS sort,
	
     app_commondata.category AS Ecat
FROM
   app_commondata
where  appkey = 'Engagement' and  type =  ${Etype}

    order by sort

</data:static-query>
    </data:query>
    <data:query name="Eclass">
      <data:static-query>SELECT 1 AS sort,'All' AS Eclass
UNION 
SELECT DISTINCT 2 AS sort,
	
     app_commondata.class AS Eclass
FROM
   app_commondata
where  appkey = 'Engagement' 
     order by sort


</data:static-query>
    </data:query>
    <data:query name="Etag3">
      <data:static-query>SELECT 1 AS sort,'All' AS Etag3
UNION 
SELECT DISTINCT 2 AS sort,
	
     app_commondata.tag3 AS Etag3
FROM
   app_commondata
where  appkey = 'Engagement' and  tag2 =  ${Etag2}

    order by sort</data:static-query>
    </data:query>
    <data:query name="Etype">
      <data:static-query>SELECT 1 AS sort,'All' AS Etype
UNION 
SELECT DISTINCT 2 AS sort,
	
     app_commondata.type AS Etype
FROM
     app_commondata
WHERE
 appkey = 'Engagement' and  class =  ${Eclass}

    order by sort

</data:static-query>
    </data:query>
    <data:query name="Query 1">
      <data:static-query>
Select * from

(SELECT distinct on (sessionid) sessionid, a[1] as tag1, a[2] as tag2, a[3] as tag3,engagementname,  engagementclass, engagementtype, engagementcategory, engageeaccount, comment, createduser,createddatetime::timestamp(0)
FROM(select regexp_split_to_array(tag, ','),createduser,id ,engagementname, engagementclass, engagementtype, engagementcategory, engageeaccount, comment,createddatetime, engagementid, sessionid
from eng_engagements 
where tag != ''
And engagementname = 'EngagementApp' 
and
(eng_engagements.engagementclass IN (SELECT CASE WHEN(${Eclass}::text = 'All' OR ${Eclass}::text IS NULL) THEN eng_engagements.engagementclass ELSE ${Eclass}::text  END ))
and
(eng_engagements.engagementtype IN (SELECT CASE WHEN(${Etype}::text = 'All' OR ${Etype}::text IS NULL) THEN eng_engagements.engagementtype ELSE ${Etype}::text  END))
and
(eng_engagements.engagementcategory IN (SELECT CASE WHEN(${Ecat}::text = 'All' OR ${Ecat}::text IS NULL) THEN eng_engagements.engagementcategory ELSE ${Ecat}::text  END)) 
and
(to_date(createddatetime,'YYYY MM DD') &gt;= ${FDate}::date AND to_date(createddatetime,'YYYY MM DD') &lt;= ${TDate}::date)
)as dt(a) ) a

LEFT OUTER JOIN

(select distinct profileid, phonenumber, mobilenumber, title, firstname from  sms_profile
order by profileid)b
on a.engageeaccount = b.profileid
order by   a.createddatetime</data:static-query>
    </data:query>
    <data:query name="Etag1">
      <data:static-query>SELECT 1 AS sort,'All' AS Etag1
UNION 
SELECT DISTINCT 2 AS sort,
	
     app_commondata.tag1 AS Etag1
FROM
   app_commondata
where  appkey = 'Engagement' and  category =  ${Ecat}

    order by sort</data:static-query>
    </data:query>
    <data:query name="Etag2">
      <data:static-query>SELECT 1 AS sort,'All' AS Etag2
UNION 
SELECT DISTINCT 2 AS sort,
	
     app_commondata.tag2 AS Etag2
FROM
   app_commondata
where  appkey = 'Engagement' and  tag1 =  ${Etag1}

    order by sort</data:static-query>
    </data:query>
  </data:query-definitions>
</data:sql-datasource>
